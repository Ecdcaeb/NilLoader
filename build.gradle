plugins {
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'java-library'
	id 'maven-publish'
}

sourceCompatibility = 8
targetCompatibility = 8

group = "com.unascribed"
archivesBaseName = "NilLoader"
version = "1.1.2-pre1"

tasks.withType(JavaCompile) {
	options.release = 8
}

repositories {
	mavenCentral()
}

configurations {
	shade
	compileOnly.extendsFrom shade
}

dependencies {
	shade 'org.ow2.asm:asm:9.2'
	shade 'org.ow2.asm:asm-tree:9.2'
	shade 'org.ow2.asm:asm-analysis:9.2'
	shade 'org.ow2.asm:asm-commons:9.2'
	
	shade 'org.cadixdev:lorenz:0.5.6'
	shade 'org.cadixdev:lorenz-asm:0.5.6'
	
	shade 'com.grack:nanojson:1.7'
	
	compileOnly 'org.slf4j:slf4j-api:1.7.9'
	compileOnly 'org.apache.logging.log4j:log4j-api:2.17.1'
	compileOnly 'log4j:log4j:1.2.17'
	compileOnly 'commons-logging:commons-logging:1.2'
}

processResources {
	inputs.property "version", version
	
	filesMatching("nilloader.nilmod.css") {
		expand "version": version
	}
}

jar {
	classifier 'slim'
}

shadowJar {
	classifier ''
	
	configurations = [project.configurations.shade]
	
	relocate 'org.objectweb.asm', 'nilloader.api.lib.asm'
	relocate 'com.grack.nanojson', 'nilloader.api.lib.nanojson'
	relocate 'org.cadixdev.lorenz', 'nilloader.impl.lib.lorenz'
	relocate 'org.cadixdev.bombe', 'nilloader.impl.lib.bombe'
	
	exclude 'META-INF/**'
	exclude 'LICENSE.txt'
	
	manifest {
		attributes (
			'Premain-Class': 'nilloader.NilLoader'
		)
	}
}

task sourcesJar(type: Jar) {
	classifier 'sources'
	
	from sourceSets.main.allSource
}

publishing {
	repositories {
		maven {
			url "https://repo-api.sleeping.town/"
			credentials {
				username project.hasProperty("publish-username") ? project.getProperty("publish-username") : null
				password project.hasProperty("publish-password") ? project.getProperty("publish-password") : null
			}
		}
	}
	publications {
		maven(MavenPublication) {
			groupId = 'com.unascribed'
			artifactId = 'nilloader'
			version = project.version
			artifact shadowJar
			artifact sourcesJar
		}
	}
}

tasks.build.dependsOn tasks.shadowJar
tasks.build.dependsOn tasks.sourcesJar
